"""
Represent a cosmos address as [Betch32](https://en.bitcoin.it/wiki/Bech32) format prefixed by the blockchain prefix.
e.i. `cosmos1jse8senm9hcvydhl8v9x47kfe5z82zmwtw8jvj`
"""
scalar Address

scalar Long

scalar UInt64

input SendInput {
    toAddress: Address!
}

type TxResponse {
    """Corresponding to the transaction hash."""
    hash: String!
    """
    Return the result code of transaction.
    See code correspondence error : https://github.com/cosmos/cosmos-sdk/blob/main/types/errors/errors.go
    """
    code: Int!
    """Description of error if available."""
    rawLog: String
    gasWanted: Long!
    gasUsed: Long!
}

type Mutation {
    """
    Send the configured amount of token to the given address.
    """
    send(input: SendInput!): TxResponse!
}

type Configuration {
    chainId: String!
    denom: String!
    prefix: String!
    amountSend: Long!
    feeAmount: Long!
    memo: String!
    gasLimit: UInt64!
}

type Query {
    configuration: Configuration!
}
